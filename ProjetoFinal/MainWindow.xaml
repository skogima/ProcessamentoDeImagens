<Window x:Class="ProjetoFinal.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:ProjetoFinal"
        xmlns:live="clr-namespace:LiveCharts.Wpf;assembly=LiveCharts.Wpf"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:fa="http://schemas.fontawesome.io/icons/"
        TextElement.Foreground="{DynamicResource MaterialDesignBody}"
        TextElement.FontWeight="Regular"
        TextElement.FontSize="13"
        TextOptions.TextFormattingMode="Ideal" 
        TextOptions.TextRenderingMode="Auto"        
        Background="{DynamicResource MaterialDesignPaper}"
        FontFamily="{DynamicResource MaterialDesignFont}"
        mc:Ignorable="d"
        Title="Processamento de imagens digitais" 
        Height="550" MinHeight="500" Width="800" MinWidth="800">
    
    <!--#region DialogHost para o histograma -->
    <materialDesign:DialogHost CloseOnClickAway="True">
        <materialDesign:DialogHost.DialogContent>
            <Grid MinWidth="700" MinHeight="350" Margin="10">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="*" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>

                <live:CartesianChart DisableAnimations="True" Grid.Column="0" Grid.Row="0" Margin="5 0"
                                     Series="{Binding HistogramaOriginal.HistogramaSeries, UpdateSourceTrigger=PropertyChanged}">
                </live:CartesianChart>
                
                <TextBlock Grid.Column="0" Grid.Row="1" Text="Histograma da imagem original" HorizontalAlignment="Center" />

                <live:CartesianChart Visibility="Visible" DisableAnimations="True" Grid.Column="1" Grid.Row="0" Margin="5 0"
                                     Series="{Binding HistogramaProcessado.HistogramaSeries, UpdateSourceTrigger=PropertyChanged}">
                </live:CartesianChart>
                <TextBlock Grid.Column="1" Grid.Row="1" Text="Histograma da imagem processada" HorizontalAlignment="Center" />
            </Grid>
        </materialDesign:DialogHost.DialogContent>
        <!--#endregion-->
        
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>

            <Grid Grid.Row="0" Margin="0 10 0 0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>

                <Grid Grid.Row="0" Grid.Column="0" Margin="10 0 30 0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <TextBlock Grid.Row="0" Grid.Column="0" Text="Efeitos:" FontSize="14"  
                               VerticalAlignment="Center" 
                               Foreground="{DynamicResource TextForegroundBrush}" 
                               Visibility="Visible" Margin="0 0 5 0" />
                    <ComboBox Name="efeitosComboBox" Grid.Row="0" Grid.Column="1" ItemsSource="{Binding EfeitoItens}"
                      SelectedItem="{Binding EfeitoSelecionado}" Visibility="Visible" VerticalAlignment="Center" />

                    <TextBlock Text="Parâmetro: " Grid.Column="0" Grid.Row="1"
                       VerticalAlignment="Center" 
                       Margin="0 0 5 0">
                        <TextBlock.Visibility>
                            <MultiBinding Converter="{local:VisibilityOrMultiConverter}">
                                <Binding ElementName="parameterComboBox" Path="Visibility" />
                                <Binding ElementName="parameterTextBox" Path="Visibility" />
                            </MultiBinding>
                        </TextBlock.Visibility>
                    </TextBlock>

                    <TextBox x:Name="parameterTextBox" Margin="0 5" Grid.Column="1" Grid.Row="1"
                         Visibility="{Binding ElementName=efeitosComboBox, Path=SelectedItem, Converter={local:StringToVisibilityConverter}}"
                         Text="{Binding ParametroSelecionado, UpdateSourceTrigger=PropertyChanged}" />

                    <ComboBox Margin="0 5" x:Name="parameterComboBox" Grid.Column="1" Grid.Row="1"
                      SelectedItem="{Binding ParametroSelecionado}"
                      Visibility="{Binding ElementName=parameterComboBox, Path=ItemsSource, Converter={local:EnumerableToVisibilityConverter}}"
                      ItemsSource="{Binding ElementName=efeitosComboBox, Path=SelectedItem, Converter={local:StringToListConverter}}"
                      />
                </Grid>

                <Button Width="40" Height="40" Grid.Column="1" Command="{Binding AlterarTemaCommand}"
                    Style="{StaticResource MaterialDesignToolButton}" Foreground="{DynamicResource CaptionForegroundBrush}" 
                        Content="{materialDesign:PackIcon Kind=Brightness5, Size=34}">
                </Button>

                <Button Grid.Column="2" FontWeight="Normal" Content="Aplicar Efeito"  Margin="30 0"
                    Command="{Binding AplicarCommand}" Background="{StaticResource CorDestaqueBrush}" 
                    BorderBrush="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Background}" Focusable="False" />
            </Grid>

            <!--#region Borda separadora -->
            <Border Grid.Row="1" BorderThickness="0.2" Margin="0 10 0 0">
                <Border.BorderBrush>
                    <LinearGradientBrush StartPoint="0, 0" EndPoint="1, 0">
                        <GradientStop Color="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Background}" Offset="0.0" />
                        <GradientStop Color="{DynamicResource BorderColor}" Offset="0.25" />
                        <GradientStop Color="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Background}" Offset="0.5" />
                        <GradientStop Color="{DynamicResource BorderColor}"  Offset="0.75" />
                        <GradientStop Color="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Background}"  Offset="1.0" />
                    </LinearGradientBrush>
                </Border.BorderBrush>

                <Border.Background>
                    <LinearGradientBrush StartPoint="0, 0" EndPoint="0,1">
                        <GradientStop Color="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Background}"  Offset="0.0" />
                        <GradientStop Color="#FFF"  Offset="1.0" />
                    </LinearGradientBrush>
                </Border.Background>
            </Border>
            <!--#endregion-->

            <!--#region Painel de carregamento -->
            <Grid Grid.Row="2" Grid.RowSpan="2" Panel.ZIndex="2" 
                  Visibility="{Binding Path=IsLoadingPanelVisible, Converter={local:BoolToVisibilityConverter}, FallbackValue=Collapsed}">
                <Grid.Background>
                    <SolidColorBrush Opacity="0.8" Color="{DynamicResource LoadingPanelColor}" />
                </Grid.Background>
                <StackPanel VerticalAlignment="Center" HorizontalAlignment="Center">
                    <TextBlock Text="Calculando..." FontSize="30" Foreground="{DynamicResource CaptionForegroundBrush}">
                        <TextBlock.Effect>
                            <DropShadowEffect Opacity="0.2" Color="{DynamicResource CaptionForeground}" BlurRadius="0" RenderingBias="Quality" ShadowDepth="3" />
                        </TextBlock.Effect>
                    </TextBlock>
                    <fa:ImageAwesome Icon="Cog" Spin="True" Height="50" Width="50" Foreground="{DynamicResource CaptionForegroundBrush}" />
                </StackPanel>
            </Grid>
            <!--#endregion-->

            <Grid Grid.Row="2">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="*" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>

                <Border Grid.Row="0" Grid.Column="0" BorderThickness="0 0 0.3 0">
                    <!--region Borda lateral -->
                    <Border.BorderBrush>
                        <LinearGradientBrush StartPoint="0, 0" EndPoint="0, 1">
                            <GradientStop Color="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Background}" Offset="0.0" />
                            <GradientStop Color="{DynamicResource BorderColor}"  Offset="0.5" />
                            <GradientStop Color="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Background}"  Offset="1.0" />
                        </LinearGradientBrush>
                    </Border.BorderBrush>
                    <!--#endregion-->

                    <Button Style="{StaticResource HoverlessButton}" FontWeight="Light" Command="{Binding AbrirImagemCommand}">
                        <Grid>
                            <Image Source="{Binding ImagemOriginal, Converter={local:BitmapToBitmapSourceConverter}}" Stretch="Fill" Panel.ZIndex="1">
                                <Image.ContextMenu>
                                    <ContextMenu>
                                        <MenuItem Header="Girar Imagem...">
                                            <MenuItem Header="Direita" Command="{Binding GirarImagemCommand}" CommandParameter="{x:Static local:Sentido.Direita}" />
                                            <MenuItem Header="Esquerda" Command="{Binding GirarImagemCommand}" CommandParameter="{x:Static local:Sentido.Esquerda}" />
                                            <MenuItem Header="Vertical" Command="{Binding GirarImagemCommand}" CommandParameter="{x:Static local:Sentido.Vertical}" />
                                            <MenuItem Header="Horizontal" Command="{Binding GirarImagemCommand}" CommandParameter="{x:Static local:Sentido.Horizontal}" />
                                        </MenuItem>
                                    </ContextMenu>
                                </Image.ContextMenu>
                            </Image>
                            <TextBlock Text="Clique para abrir uma imagem" FontSize="18" Panel.ZIndex="0"
                                   Foreground="{DynamicResource CaptionForegroundBrush}">
                                <TextBlock.Effect>
                                    <DropShadowEffect Opacity="0.2" 
                                                  Color="{DynamicResource CaptionForeground}" />
                                </TextBlock.Effect>
                            </TextBlock>
                        </Grid>
                    </Button>
                </Border>
                
                <!-- Botão para "trocar" imagem -->
                <Button Grid.Row="0" Grid.Column="1" Style="{StaticResource MaterialDesignToolButton}"
                        Content="{materialDesign:PackIcon Kind=ArrowLeftThick, Size=26}"
                        Command="{Binding EnviarImagemCommand}"/>

                <Image Grid.Row="0" Grid.Column="2" Stretch="Fill" 
                   Source="{Binding ImagemProcessada, Converter={local:BitmapToBitmapSourceConverter}}">
                    <Image.ContextMenu>
                        <ContextMenu>
                            <MenuItem Header="Salvar Imagem..." Command="{Binding SalvarImagemCommand}" />
                        </ContextMenu>
                    </Image.ContextMenu>
                </Image>
                
                <!-- Informações (resolução) -->
                <StackPanel Grid.Row="1" Grid.Column="0" Orientation="Horizontal" Margin="5" HorizontalAlignment="Center" >
                    <TextBlock Text="Resolução: " />
                    <TextBlock Text="{Binding ImagemOriginalResolucao}"  />
                </StackPanel>
                <StackPanel Grid.Row="1" Grid.Column="2" Orientation="Horizontal" HorizontalAlignment="Center" Margin="5">
                    <TextBlock Text="Resolução: "  />
                    <TextBlock Text="{Binding ImagemProcessadaResolucao}" />
                </StackPanel>
            </Grid>

            <StackPanel Grid.Row="3">
                <Button Grid.ColumnSpan="2" Margin="0 0 0 5" 
                        Command="{x:Static materialDesign:DialogHost.OpenDialogCommand}"
                        VerticalAlignment="Center" HorizontalAlignment="Center" 
                        Content="{materialDesign:PackIcon Kind=ChartBar,Size=24}"
                        Background="{StaticResource CorDestaqueBrush}"
                        BorderBrush="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Background}">
                    <Button.IsEnabled>
                        <MultiBinding Converter="{local:BoolAndMultiConverter}">
                            <Binding Path="ExibirHistograma" />
                            <Binding Path="CalcularHistograma" />
                        </MultiBinding>
                    </Button.IsEnabled>
                </Button>

                <StackPanel Orientation="Horizontal" Margin="0 0 0 5"
                            VerticalAlignment="Center" HorizontalAlignment="Center">
                    <TextBlock Text="Calcular histograma?" Margin="10 0"/>
                    <ToggleButton IsChecked="{Binding CalcularHistograma, Mode=TwoWay}" />
                </StackPanel>
            </StackPanel>
        </Grid>
    </materialDesign:DialogHost>
</Window>